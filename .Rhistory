library(bookdownplus)
library(bookdownplus)
library(bookdownplus)
library(bookdownplus)
template(T)
library(steemr)
sposts()
library(lattice)
library(lattice)
sposts()
sposts()
library(bookdownplus)
library(bookdownplus)
library(bookdownplus)
library(bookdownplus)
library(bookdownplus)
library(bookdownplus)
library(bookdownplus)
library(bookdownplus)
library(bookdownplus)
template(dataframe = T)
write.csv(template(T), 'alist.csv')
write.csv(template(T), 'alist.csv', quote = T)
x <- template(T)
names(x)
x$author <- 'Peng Zhao'
x <- x[, c(2, 4, 3)]
names(x)
names(x) <- c('name', 'author', 'intro')
names(x)
write.csv(x, 'alist.csv', quote = T)
write.csv(x, 'alist.csv', quote = T, row.names = F)
library(bookdownplus)
template()
library(bookdownplus)
template()
df_remote <- read.csv('https://raw.githubusercontent.com/pzhaonet/bookdownplus/master/upload/list.csv')
path_remote <- 'https://raw.githubusercontent.com/pzhaonet/bookdownplus/master/upload/list.csv'
path_remote <- 'https://raw.githubusercontent.com/pzhaonet/bookdownplus/master/upload/list.csv'
try(read.csv(path_remote))
df_r <- read.csv(path_remote)
df_r <- try(read.csv(path_remote), silent = FALSE)
df_r <- try(read.csv(path_remote), silent = T)
class(df_r)
library(bookdownplus)
template
template <- 'dapeng_test'
getwd()
setwd('d:/temp/test')
remote_file <- paste0('https://github.com/pzhaonet/bookdownplus/raw/master/upload/', template, '/demo.zip')
remote_file
library(bookdownplus)
library(bookdownplus)
library(bookdownplus)
###### get the locale template and prepare
pckpath <- paste0(path.package(package = 'bookdownplus'), '/')
pckpath
template = 'thesis_classic'
###### check whether the template is available
template_all <- get_template()
template_all
template %in% template_all$name
if_remote <- template_all[template_all$name == template, 'location'] == 'remote'
if_remote
###### get the locale template and prepare
pckpath <- paste0(path.package(package = 'bookdownplus'), '/')
paste0(pckpath, 'templates/', template, '.zip')
library(bookdownplus)
library(bookdownplus)
library(bookdownplus)
library(bookdownplus)
library(bookdownplus)
library(bookdownplus)
library(bookdownplus)
setwd('d:/github/bookdownplus/upload')
dir()
dir(pattern = 'zip')
myt <- dir(pattern = 'zip')
myt
gsub('.zip', '', myt)
myt <- gsub('.zip', '', myt)
for(i in myt){
dir.create(i)
dir.create(paste0(i, '/showcase'))
file.copy(paste0(i, '.zip'), paste0(i, '/demo.zip'))
}
library(bookdownplus)
library(bookdownplus)
share <- function(template_path = NA, template_name = NA){
if(is.na(template_path) | !dir.exists(template_path)) return(message('Template folder not found.'))
dir.create(template_name)
zip(files = template_path, zipfile = paste0(template_name, '/demo.zip'))
file.create(paste0(template_path, '/readme.txt'))
}
setwd('d:/temp/test')
share(template_path = 'd:/github/bookdown-copernicus', template_name = 'mytest')
template_name = 'mytest'
template_path = 'd:/github/bookdown-copernicus'
zip(files = template_path, zipfile = paste0(template_name, '/demo.zip'))
zip(files = paste0(template_path, '/*.*'), zipfile = paste0(template_name, '/demo.zip'))
getwd()
install.packages('Rcompress')
install.packages('Rcompression')
#' Prepare a relaxed template folder to contribute to bookdownplus
#'
#' @param template_path character. The complete path of the template folder.
#' @param template_name character. The tempalte name.
#'
#' @return Prepare a folder for contribution.
#' @export
#'
#' @examples
#' share()
share <- function(template_name = NA){
if(is.na(template_name)) return(message('Please give a valid tempalte name.'))
dir.create(template_name)
dir.create(paste0(template_name, '/share'))
file.create(paste0(template_name, '/readme.txt'))
}
share(template_name = 'mytest')
#' Prepare a relaxed template folder to contribute to bookdownplus
#'
#' @param template_path character. The complete path of the template folder.
#' @param template_name character. The tempalte name.
#'
#' @return Prepare a folder for contribution.
#' @export
#'
#' @examples
#' share()
share <- function(template_name = NA){
if(is.na(template_name)) return(message('Please give a valid tempalte name.'))
dir.create(template_name)
dir.create(paste0(template_name, '/showcase'))
file.create(paste0(template_name, '/put_readme.txt_and_demo-zip_here.txt'))
file.create(paste0(template_name, 'showcase/put_sample_images_and_cover.png_here.txt'))
}
share(template_name = 'mytest')
#' Prepare a relaxed template folder to contribute to bookdownplus
#'
#' @param template_path character. The complete path of the template folder.
#' @param template_name character. The tempalte name.
#'
#' @return Prepare a folder for contribution.
#' @export
#'
#' @examples
#' share()
share <- function(template_name = NA){
if(is.na(template_name)) return(message('Please give a valid tempalte name.'))
dir.create(template_name)
dir.create(paste0(template_name, '/showcase'))
file.create(paste0(template_name, '/put_readme.txt_and_demo-zip_here.txt'))
file.create(paste0(template_name, '/showcase/put_sample_images_and_cover.png_here.txt'))
}
share(template_name = 'mytest')
library(bookdownplus)
getwd()
bookdownplus::share('your_template_name')
libray(bookdownplus)
library(bookdownplus)
get_template()
get_template()$name
library(bookdownplus)
library(bookdownplus)
library(bookdownplus)
get_output()
get_template()
get_template()
library(bookdownplus)
library(bookdownplus)
library(bookdownplus)
library(bookdownplus)
get_output()
library(bookdownplus)
