{
    "collab_server" : "",
    "contents" : "#' Create demo files for building books with R bookdown package.\n#'\n#' @param template character. Choose a template for your book or doc. The default template is 'thesis_classic'. Available templates are:\n#' - 'article', academic article,\n#' - 'article_mdpi',   academic article by mdpi,\n#' - 'article_zh', academic article in Chinese,\n#' - 'calendar',  monthly or weekly calendar,\n#' - 'chemistry',   book with chemical molecular formulae and equations\n#' - 'chemistry_zh', chemistry book in Chinese,\n#' - 'discussion', article in discussion format,\n#' - 'guitar',  book with guitar chords,\n#' - 'journal', laboratory journal or personal diary,\n#' - 'mail', personal or business mail,\n#' - 'nte_zh', a template from Nothing to envy, in Chinese\n#' - 'poem', poem book,\n#' - 'thesis_classic' (default), classic thesis,\n#' - 'thesis_mypku',  thesis of my Peking Uni., in Chinese,\n#' - 'thesis_ubt',  thesis of University of Bayreuth,\n#' - 'thesis_zju',  thesis of Zhejiang Uni., in Chinese,\n#' - 'yihui_demo',  the original demo book by Yihui Xie,\n#' - 'yihui_mini',  a mini demo book by Yihui Xie,\n#' - 'yihui_zh', the demo in Chinese by Yihui Xie,\n#' - 'article2_zh', article in two columns in Chinese, not ready yet,\n#' - 'poster', poster.\n#' @param title character. book title.\n#' @param author character. book author.\n#' @param more_output optional output formats. NULL(default) or c('word', 'html', 'epub')\n#'\n#' @param mail_opening character. opening of the mail, such as 'Dear Thomas, '\n#' @param mail_closing  character. closing of the mail, such as 'Yours, '\n#' @param mail_from_address character. sender's address (Street and No.) for mail template\n#' @param mail_from_town  character. sender's town for mail template\n#' @param mail_from_phone character. sender's phone number for mail templae\n#' @param mail_from_mobile character. sender's mobile phone number for mail templae\n#' @param mail_from_fax character. sender's fax number for mail templae\n#' @param mail_from_email character. sender's email for mail template\n#' @param mail_to_who character. recipient's name for mail template\n#' @param mail_to_affiliation character. recipient's affiliation (institute, university, etc.) for mail template\n#' @param mail_to_address character. recipient's address (Street and No.) for mail template\n#' @param mail_to_town character. recipient's town for mail template\n#' @param mail_date character. The date appearing in the mail\n#' @param mail_style character. The mail style for mail template. Available styles are:\n#' - 'casual' (default),\n#' - 'classic',\n#' - 'oldstyle', and\n#' - 'banking'\n#' @param mail_theme character. The mail theme for mail template. Available themes are:\n#' - 'blue' (default),\n#' - 'orange',\n#' - 'green',\n#' - 'red',\n#' - 'purple',\n#' - 'grey', and\n#' - 'black'\n#' @param mail_font character. The font of the body for mail template. Available fonts are:\n#' - 'sffamily' (default), or\n#' - 'calligra'\n#' @param mail_fontsize character. fontsize of the mail for mail template. Available sizes are:\n#' - '10pt',\n#' - '11pt', and\n#' - '12pt' (default)\n#' @param mail_bodysize character. fontsize of the mail body for mail template. Available sizes are:\n#' - 'tiny',\n#' - 'scriptsize',\n#' - 'footnotesize',\n#' - 'small',\n#' - 'normalsize' (default),\n#' - 'large',\n#' - 'Large',\n#' - 'LARGE',\n#' - 'huge',\n#' - 'Huge'.\n#'\n#' @param poster_email character. author's email for poster template\n#' @param poster_institute character. for poster template\n#' @param poster_longinstitute  character. for poster template\n#' @param poster_web   character. for poster template\n#' @param poster_logo  character. The path of the logo image. for poster template\n#' @param poster_backimg  character. The path of the background image. for poster template\n#' @param poster_bibliofiles  character. The path of the bib file for poster template\n#' @param poster_theme  character. theme for poster template. available themes are\n#' - 'eco' (default),\n#' - 'ocean',\n#' - 'rose'.\n#'\n#' @return demo files to build with bookdown\n#' @export\n#' @examples\n#' bookdownplus()\n#' bookdownplus(template = 'article')\n#' @description\n#' Technically, `bookdownplus` is a collection and selector of R bookdown templates. `bookdownplus` helps you write academic journal articles, guitar books, chemical equations, mails, calendars, and diaries. R `bookdownplus` extends the features of `bookdown`, and simplifies the procedure. Users only have to choose a template, clarify the book title and author name, and then focus on writing the text. No need to struggle in YAML and LaTeX.\n#'\n#' Full documentation of `bookdownplus` can be found in the book [R bookdownplus Textbook](https://bookdown.org/baydap/bookdownplus). Here is a quick-start procedure.\n#'\n#' - Before starting, you have to install `bookdown` package, and other software and packages (i.e. 'Pandoc', 'LaTeX', `rmarkdown`, `rticle`, `knitr`, etc.) which `bookdown` depends on. See the [official manual of `bookdown`](https://bookdown.org/yihui/bookdown/) for details. Additionally, if you want to produce a poster, phython must be installed before using, and the path of phython might have to be added to the environmental variables for Windows users.\n#'\n#' - Run `bookdownplus()` and specify the template with `template` argument, You will get some files (e.g. `index.Rmd`, `body.Rmd`, `bookdownplus.Rproj`) and folders in your working directory. Although there are many other arguments for `bookdownplus()`, you can simply ignore them if you use `bookdownplus` package for the first time.\n#' - Open `bookdownplus.Rproj` with RStudio. Now press `ctrl+shift+b` to build it. Your will get a book file named `*.pdf` in `_book/` folder.\n#' - Write your own text in `index.Rmd` and `body.Rmd`, and build your own lovely book.\nbookdownplus <- function( ######\n  template = 'thesis_classic',\n  more_output = NULL,\n  # more_output = c('html', 'word', 'epub'),\n  title ='R bookdownplus',\n  author = 'Peng Zhao',\n\n  # for mail template only\n  mail_from_address = '15 Robin Hood Lane',\n  mail_from_town = '11758  Massapequa, Long Island, New York',\n  mail_from_phone = '31415926',\n  mail_from_mobile = '31415927',\n  mail_from_fax = '31415928',\n  mail_from_email = 'dapengde@live.com',\n  mail_to_who = 'recipient',\n  mail_to_affiliation = 'University of Innsbruck',\n  mail_to_address = 'recipient address',\n  mail_to_town = '100000 Beijing, China',\n  mail_opening = 'Dear Sir or Madam,',\n  mail_closing = 'Yours faithfully,',\n  mail_date = '25 June, 2017',\n  mail_style = c('casual', 'classic', 'oldstyle', 'banking')[1],\n  mail_theme = c('blue', 'orange', 'green', 'red', 'purple', 'grey', 'black')[1],\n  mail_font = c('sffamily', 'calligra ')[1],\n  mail_fontsize = c('10pt', '11pt', '12pt')[3],\n  mail_bodysize = c(\n    'tiny', 'scriptsize', 'footnotesize', 'small', 'normalsize',\n    'large', 'Large', 'LARGE', 'huge','Huge') [5],\n\n  # for poster template only\n  poster_email = 'pzhao@pzhao.net',\n  poster_institute = 'Institute of Ecology, Univ. Innsbruck',\n  poster_longinstitute = 'Institute of Ecology, University of Innsbruck, Austria',\n  poster_web = 'pzhao.org',\n  poster_logo = 'images/logo.png',\n  poster_backimg = 'images/logo.png',\n  poster_bibliofiles = 'bib/bib.bib',\n  poster_theme = c('eco', 'ocean', 'rose')[1]) {\n\n  ###### internal functions ######\n  ### copy necessary files to the working directory\n  copyfolder <- function(folder = 'images') {\n    dir.create(folder,showWarnings = FALSE)\n    mypath <- paste0(.libPaths(), '/bookdownplus/', folder)\n    file.copy(from = dir(mypath[dir.exists(mypath)][1], full.names = TRUE), to = folder)\n  }\n\n  ###  define body file name, dependent on the template name\n  bodyfile <- function(x) {\n    if (x == 'article_zh') return('rmd/body_article_zh.Rmd')\n    if (x == 'article2_zh') return('rmd/body_article_zh.Rmd')\n    if (x == 'calendar') return('rmd/body_calendar.tex')\n    if (x == 'chemistry') return('rmd/body_chemistry.Rmd')\n    if (x == 'chemistry_zh') return('rmd/body_chemistry_zh.Rmd')\n    if (x == 'guitar') return('rmd/body_guitar.Rmd')\n    if (x == 'mail') return('rmd/body_mail.Rmd')\n    if (x == 'journal') return('rmd/body_journal.Rmd')\n    if (x == 'yihui_zh') return('rmd/body_yihui_zh.Rmd')\n    if (x == 'thesis_classic') return('rmd/body_thesis_classic.Rmd')\n    if (x == 'thesis_zju') return('rmd/body_thesis_zju.Rmd')\n    if (x == 'thesis_mypku') return('rmd/body_thesis_mypku.Rmd')\n    if (x == 'nte_zh') return('rmd/body_nte_zh.Rmd')\n    if (x == 'discussion') return('rmd/body_discussion.Rmd')\n    if (x == 'poem') return('rmd/body_poem.Rmd')\n    'rmd/body.Rmd'\n  }\n\n  ### backup a file to backup/ folder, avoid overwriting it.\n  backup <- function(filename, ifbackup = TRUE) {\n    if (ifbackup) {\n      if (file.exists(filename)) {\n        filenamesplit <- strsplit(filename, '\\\\.')[[1]]\n        filenamesplitl <- length(filenamesplit)\n        tolength <- ifelse(filenamesplitl > 1, filenamesplitl - 1, 1)\n        filenamepost <- filenamesplit[filenamesplitl]\n        backupfile <- paste0('backup/', paste(filenamesplit[1:tolength], collapse = '_'), '-', format(Sys.time(), '%Y-%m-%d-%H-%M-%S'), '.', filenamepost)\n        file.copy(filename, backupfile)\n        message(paste(filename, 'exsits. Backuped to', backupfile, ':)'))\n      } #else {\n        #message(paste(filename, 'does not exist. No need to bakcup :)'))\n      #}\n    }\n  }\n\n  ###### copy folders and files to the working dir ######\n  lapply(X = c('backup', 'bib', 'rmd', 'images', 'style','tex', 'fonts'), FUN = copyfolder)\n  mypath <- paste0(.libPaths(), '/bookdownplus/proj/')\n  file.copy(from = paste0(mypath[dir.exists(mypath)][1], 'bookdownplus'), to = 'bookdownplus.Rproj.')\n\n  ###### prepare index.Rmd ######\n  book_filename <- template\n  index <- readLines(paste0('rmd/index_', template, '.Rmd'), encoding = 'UTF-8')\n  index[grep('^title: \"', index)] <- paste0('title: \"', title, '\"')\n  index[grep('^author: \"', index)] <- paste0('author: \"', author, '\"')\n  # index[grep('titleshort: \"', index)] <- paste0('titleshort: \"', titleshort, '\"')\n\n  if (template == 'poster') {\n    index[grep('^%% template=tex/poster.tex', index)] <- paste0('%% template=tex/poster_', poster_theme, '.tex')\n  }\n  backup('index.Rmd')\n  writeLines(index, 'index.Rmd', useBytes = TRUE)\n\n  if (template != 'poster') {\n\n    ###### prepare _bookdown.yml, which defines the output filename of the book. ######\n    filenameyml <- readLines('rmd/_bookdown.yml', encoding = 'UTF-8')\n    filenameyml[grep('book_filename: ', filenameyml)] <- paste0('book_filename: ', book_filename)\n    backup('_bookdown.yml')\n    writeLines(filenameyml, '_bookdown.yml', useBytes = TRUE)\n\n    ###### prepare _output.yml, which defines the output files of gitbook and epub formats. comment it if you only need pdf. ######\n    backup('_output.yml')\n    # file.copy('rmd/_output.yml', '_output.yml', copy.mode = FALSE, overwrite = TRUE)\n    output <- readLines('rmd/_output.yml')\n    if (!is.null(more_output)) {\n      outputyml <- file(\"_output.yml\",\"w\")\n      for (ic in more_output) {\n        writeLines(readLines(paste0('rmd/_output_', ic, '.yml')), con = outputyml, sep= \"\\n\")\n      }\n      close(outputyml)\n      }\n    ###### prepare body.Rmd ######\n    bodydemo <- bodyfile(template)\n    bodynew <- paste0('body', substr(bodydemo, nchar(bodydemo)-3, nchar(bodydemo)))\n    backup('body.Rmd')\n    file.copy(bodydemo, bodynew, copy.mode = FALSE, overwrite = TRUE)\n\n    ###### exceptions ######\n\n    ### article_zh needs an additional abstract.tex file\n    if (template %in% c('article_zh', 'article2_zh')) {\n      backup('abstract.tex')\n      file.copy(paste0('tex/template_', template, '_abstract.tex'), 'abstract.tex', copy.mode = FALSE, overwrite = TRUE)\n    }\n\n    ### mail needs an additional template_mail.tex as a before_body part.\n    if (template == 'mail') {\n      tmail <- readLines('tex/template_mail.tex')\n      # tmail[51] <- paste0('{\\\\bfseries ', author, '}\\\\\\\\[.35ex]')\n      # tmail[53] <- paste0(from_address, '\\\\\\\\')\n      # tmail[54] <- paste0(from_town, '\\\\\\\\[.35ex]')\n      # tmail[55] <- paste0('\\\\Telefon~', from_phone, '\\\\\\\\')\n      # tmail[56] <- paste0('\\\\Letter~\\\\href{mailto:', from_email, '}{', from_email, '}')\n      #\n      # tmail[61] <- paste0('{\\\\bfseries ', to_who, '}\\\\\\\\[.35ex]')\n      # tmail[63] <- paste0(to_address, '\\\\\\\\')\n      # tmail[64] <- paste0(to_town, '\\\\\\\\[.35ex]')\n      #\n      # tmail[78] <- paste0('{\\\\bfseries ', author, '}\\\\\\\\')\n      # tmail[75] <- paste(switch(type, 'business' = '\\\\sffamily', 'personal' = '\\\\calligra' ),\n      #                    fontsize, sep = '\\\\')\n      tmail[9] <- paste0('\\\\documentclass[', mail_fontsize, ',a4paper,sans]{style/moderncv}')\n      tmail[12] <- paste0('\\\\moderncvstyle{', mail_style, '}')\n      tmail[13] <- paste0('\\\\moderncvcolor{', mail_theme, '}')\n      tmail[27] <- paste0('\\\\name{', author, '}{}')\n      tmail[29] <- paste0('\\\\address{', mail_from_address, '}{', mail_from_town,'}{}')\n      tmail[30] <- paste0('\\\\phone[mobile]{', mail_from_mobile, '}')\n      tmail[31] <- paste0('\\\\phone[fixed]{', mail_from_phone, '}')\n      tmail[32] <- paste0('\\\\phone[fax]{', mail_from_fax, '}')\n      tmail[33] <- paste0('\\\\email{', mail_from_email, '}')\n      tmail[54] <- paste0('\\\\recipient{', mail_to_affiliation, '}{',mail_to_address, '\\\\\\\\', mail_to_town, '}')\n      tmail[55] <- paste0('\\\\date{', mail_date, '}')\n      tmail[56] <- paste0('\\\\opening{', mail_opening, '}')\n      tmail[57] <- paste0('\\\\closing{', mail_closing, '}')\n      tmail[59] <- paste0('\\\\', mail_font, '\\\\', mail_bodysize)\n      writeLines(tmail, 'tex/template_mail_user.tex')\n    }\n\n    ### article_mdpi needs an additional bst file\n    if (template == 'article_mdpi') {\n      file.copy('style/mdpi.bst', 'mdpi.bst')\n    }\n  }\n}\n",
    "created" : 1498256300577.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "2595908284",
    "id" : "CE01E409",
    "lastKnownWriteTime" : 1498398742,
    "last_content_update" : 1498398742049,
    "path" : "D:/googledrive/a9/bookdownplus/R/fun.R",
    "project_path" : "R/fun.R",
    "properties" : {
    },
    "relative_order" : 1,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}